<!DOCTYPE html>
<html lang="en">

<head>
    <title>Admin Home</title>
    <link rel="stylesheet" href="/styles.css">
    <style>
        :root {
            --primary: #3498db;
            --secondary: #2c3e50;
            --success: #2ecc71;
            --danger: #e74c3c;
            --warning: #f39c12;
            --light: #f5f5f5;
            --dark: #2c3e50;
            --text: #333;
            --border: #ddd;
        }

        body {
            /* background-color: #D4C9BE; */
            color: #030303;
        }

        .navbar {
            display: flex;
            height: 10vh;
            width: 100%;
            justify-content: space-between;
            background-color: #000000;
            padding: 0.8rem 2rem;
        }

        .logo {
            color: white;
            font-size: 1.5rem;
            font-weight: 700;
            display: flex;
            align-items: center;
        }

        .nav-links {
            display: flex;
            list-style: none;
        }

        .nav-links li {
            margin: 0 1rem;
        }

        .nav-links a {
            color: white;
            text-decoration: none;
            font-weight: 500;
            padding: 0.5rem;
            transition: all 0.3s ease;
        }

        ul {
            margin-top: 10px;
        }

        .nav-links a:hover,
        .nav-links a.active {
            color: #F1EFEC;
            border-bottom: 2px solid #F1EFEC;
        }

        .logout button {
            color: red;
            background-color: #000000;
            border: 3px solid red;
            padding: 10px;
            border-radius: 20px;
            margin-top: 5px;
            cursor: pointer;
        }

        .logout button:hover {
            background-color: rgb(35, 1, 1);
        }

        .container {
            margin-top: 80px;
            padding: 20px;
        }

        .dashboard-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
            padding: 15px;
            background-color: white;
            border-radius: 8px;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        }

        .display-title {
            font-size: 18.rem;
            color: var(--dark);
        }

        .search-box input {
            padding: 8px;
            border-radius: 20px;
            border: 1px solid #ddd;
            width: 250px;
        }

        .filter-container {
            display: flex;
            margin-bottom: 20px;
            background: white;
            padding: 15px;
            border-radius: 8px;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
            flex-wrap: wrap;
        }

        .filter-btn {
            margin-right: 10px;
            padding: 8px 16px;
            border: none;
            border-radius: 20px;
            background-color: #f1f1f1;
            cursor: pointer;
            transition: all 0.3s ease;
            font-weight: 500;
        }

        .filer-btn.active {
            background-color: var(--primary);
            color: white;
        }

        .export-btn {
            padding: 8px 16px;
            border: none;
            border-radius: 20px;
            background-color: var(--success);
            color: white;
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
        }

        .export-btn i {
            margin-right: 5px;
        }

        .export-btn:hover {
            background-color: #27ae60;
        }

        .user-table-container {
            background: white;
            border-radius: 8px;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
            overflow: hidden;
            margin-bottom: 20px;
        }

        .user-table {
            width: 100%;
            border-collapse: collapse;
        }

        .user-table th,
        .user-table td {
            padding: 12px 15px;
            text-align: left;
            border-bottom: 1px solid var(--border);
        }

        .user-table th {
            background-color: #f8f9fa;
            font-weight: 600;
            color: var(--dark);
        }

        .user-table tr:hover {
            background-color: #f8f9fa;
        }
    </style>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
</head>

<body>
    <!-- navbar start-->
    <nav class="navbar">
        <div class="logo">
            PLAY
        </div>

        <ul class="nav-links">
            <li><a href="/view/admin-home">Dashboard</a></li>
            <li><a href="#">Analytics</a></li>
            <li><a href="#">Reports</a></li>
            <li><a href="#" class="active">Users</a></li>
            <li><a href="#">Settings</a></li>
        </ul>
        <div class="items">

            <div class="right-section">
                <div class="logout">
                    <button id="logout-button">Logout</button>
                </div>
            </div>
        </div>
    </nav>
    <!-- navbar end -->

    <!-- Main Container start-->
    <div class="container">
        <!-- Dashboard header start -->
        <div class="dashboard-header">
            <h1 class="dashboard-title"> User Management</h1>
            <div class="search-box">
                <input type="text" id="search-input" placeholder="Search users...">
            </div>
        </div>
        <!-- Dashboard header end -->

        <!-- Filter Section Start -->
        <div class="filter-container">
            <button class="filter-btn active" data-filter="all">All Users</button>
            <button class="filter-btn" data-filter="verified">Verified Users</button>
            <button class="filter-btn" data-filter="unverified">Unverified Users</button>
            <button class="filter-btn" data-filter="deleted">Deleted Users</button>

            <button class="epxort-btn" id="epxort-csv">
                <i class="fas fa-download"></i> Export CSV
            </button>
        </div>
        <!-- Filter Section End -->

        <!-- User Table Start -->
        <div class="user-table-container">
            <table class="user-table">
                <thead>
                    <tr>
                        <th>User</th>
                        <th>Email</th>
                        <th>Status</th>
                        <th>Joined</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody id="users-table-body">
                    <tr>
                        <td colspan="5" class="loading">Loading users...</td>
                    </tr>
                </tbody>
            </table>
        </div>
        <!-- User Table End -->

        <!-- Pagination Start -->
        <div class="pagination">
            <!-- Will be populated by Javascript -->
        </div>
        <!-- Pagination End -->
    </div>
    <!-- Main Container end-->

</body>
<script>
    document.addEventListener('DOMContentLoaded', function () {

        let currentPage = 1;
        let currentFilter = 'all';
        const limit = 5;
        const apiBaseUrl = 'http://localhost:5000/api/v1/admin';
        let users = [];
        let filteredUsers = [];

        const tableBody = document.getElementById('users-table-body');
        const pagination = document.getElementById('pagination');
        const filterButtons = document.querySelectorAll('.filter-btn');
        const exportButton = document.getElementById('export-csv');
        const searchInput = document.getElementById('search-input');
        const logoutBtn = document.getElementById("logout-button");


        async function fetchUsers(filter, page) {
            try {
                // show loading state
                tableBody.innerHTML = '<tr><td colspan="5" class="loading">Loading users... </td></tr>';

                // Determine API endpoint based on filter
                let endpoint;
                switch (filter) {
                    case 'verified':
                        endpoint = `${apiBaseUrl}/users/verified?page=${page}&limit=${limit}`;
                        break;
                    case 'unverified':
                        endpoint = `${apiBaseUrl}/users/unverified?page=${page}&limit=${limit}`;
                        break;
                    case 'deleted':
                        endpoint = `${apiBaseUrl}/users/deleted?page=${page}&limit=${limit}`;
                        break;
                    default:
                        endpoint = `${apiBaseUrl}/users/all?page=${page}&limit=${limit}`;
                }

                const response = await fetch(endpoint, {
                    method: 'GET',
                    credentials: 'include',
                    headers: {
                        'Content-Tpe': 'application/json'
                    }
                });

                // if (!response.success) {
                if (!response.ok) {
                    throw new Error('Failed to fetch users');
                }

                const data = await response.json();

                if (!data || data.length === 0) {
                    tableBody.innerHTML = `
                        <tr>
                            <td colspan="5" class="empty-state">
                                <i class="fas fa-users-slash"></i>
                                <p>No users found</p>
                            </td>
                        </tr>
                    `;
                    pagination.innerHTML = '';
                    return;
                }
                users = data;
                filteredUsers = [...users];

                renderUsers(filteredUsers);
                renderPagination(filteredUsers.length);

            } catch (error) {
                console.error('Error fetching users: ', error);
                tableBody.innerHTML = `
                <tr>
                    <td colspan="5" class="error">
                        Error loading users: ${error.message}
                    </td>
                </tr>`;
            }
        }

        function renderUsers(usersData) {
            //clear the table
            tableBody.innerHTML = '';

            if (usersData.length === 0) {
                tableBody.innerHTML = `
                    <tr>
                        <td colspan="5" class="empty-state">
                            <i class="fas fa-search"></i>
                            <p>No users match your search</p>
                        </td>
                    </tr>
                `;
                return;
            }

            usersData.forEach(user => {
                const row = document.createElement('tr');
                const formattedDate = joinDate.toLocalDateString('en-US', {
                    year: 'numeric',
                    month: 'short',
                    day: 'numeric'
                });

                let statusClass = 'unverified';
                let statusText = 'Unverified';

                if (user.isVerified && !user.isDelete) {
                    statusClass = 'verified';
                    statusText = 'Verified';
                } else if (user.isDeleted) {
                    statusClass = 'deleted';
                    statusText = 'Deleted';
                }

                row.innerHTML = `
                    <td>
                        <div style="display: flex; align-items: center;">
                            <img src="/api/placeholder/40/40" alt="Avatar" class="user-avatar">
                            <div style="margin-left: 10px;">
                                <div style = "font-weight: 500;">${user.username || 'N/A'}</div>
                                <div style = "font-weight: 0.8rem; color:#777;">${user._id}</div>
                            </div>
                        </div>
                    </td>
                    <td>${user.email}</td>
                    <td><span class="verification-badge ${statusClass}">${statusText}</span></td>
                    <td>${formattedDate}</td>
                    <td class="action-column">
                        <button class= "action-btn view-btn">View</button>
                        <button class= "action-btn edit-btn">Edit</button>
                        ${!user.isDeleted ?
                            `<button class="action-btn delete-btn">Delete</button>` :
                            `<button class= "action-btn edit-btn" style="background-color: #27ae60;">Restore</button>`
                    }
                    </td>
                `;

                tableBody.appendChild(row);

                document.querySelectorAll('.view-btn').forEach((btn, index) => {
                    btn.addEventListener('click', () => viewUser(usersData[index])); 
                });

                document.querySelectorAll('.edit-btn').forEach((btn, index) => {
                    btn.addEventListener('click', () => editUser(usersData[index]));
                });

                document.querySelectorAll('.delete-btn').forEach((btn, index) => {
                    btn.addEventListener('click', () => {
                        if(usersData[index].isDeleted) {
                            restoreUser(usersData[index]);
                        }else{
                            deleteUser(usersData[index]);
                        }
                    });
                });
            });
        }

        function renderPagination(totalUsers) {
            // calculate total pages
            const totalPages = Math.ceil(totalUsers/limit);

            // Clear pagination
            pagination.innerHTML = '';

            //Don't show pagination if there is only one page
            if(totalPages <= 1) return;

            //Previous button
            const prevButton = document.createElement('button');
            prevButton.className = 'pagination-btn';
            prevButton.innerHTML = '&laquo';
            prevButton.disabled = currentPage === 1;
            prevButton.addEventListener('click', () => {
                if (currentPage > 1) {
                    currentPage--;
                    fetchUsers(currentFilter, currentPage);
                }
            });
            pagination.appendChild(prevButton);

            for (let i = 1; i<= totalPages; i++){
                const pageButton = document.createElement('button');
                pageButton.className = `pagination-btn ${i === currentPage ? 'active': ''}`;
                pageButton.textContent = i;
                pageButton.addEventListener('click', () => {
                    currentPage = i;
                    fetchUsers(currentFilter, currentPage);
                });
                pagination.appendChild(pageButton);
            }

            const nextButton = document.createElement("button");
            nextButtonn.className = 'pagination-btn';
            nextButton.innerHTML = '&raquo';
            nextButton.disabled = currentPage === totalPages;
            nextButton.addEventListener('click', () => {
                if (currentPage < totalPages) {
                    currentPage++;
                    fetchUsers(currentFilter, currentPage);
                }
            });
            pagination.appendChild(nextButton);

        }
        logoutBtn.addEventListener("click", async function () {
            try {
                const API_URL = "http://localhost:5000/api/v1/admin/logout";
                const response = await axios.post(API_URL, {});

                const data = response.data;
                if (data.success) {
                    localStorage.clear();
                    window.location.href = "/view/admin-login";
                } else {
                    console.error("Log out Attempt failed");

                }
            } catch (error) {
                console.error("Logout failed: ", error);

            }
        });

    });
</script>

</html>